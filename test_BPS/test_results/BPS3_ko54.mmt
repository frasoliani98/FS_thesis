[[model]]
author: Myokit CellML 1 API
name: BCPS_2020
# Initial values
membrane.v              = -87
CaMK.CaMKt              = 0
intracellular_ions.nai  = 7
intracellular_ions.nass = 7
intracellular_ions.ki   = 145
intracellular_ions.kss  = 145
intracellular_ions.cass = 0.0001
intracellular_ions.casr = 1.2
intracellular_ions.cai  = 0.0001
INa.m                   = 0
INa.hf                  = 1
INa.hs                  = 1
INa.j                   = 1
INa.hsp                 = 1
INa.jp                  = 1
INaL.mL                 = 0
INaL.hL                 = 1
INaL.hLp                = 1
Ito.a                   = 0
Ito.iF                  = 1
Ito.iS                  = 1
Ito.ap                  = 0
Ito.iFp                 = 1
Ito.iSp                 = 1
ICaL.nca                = 0
ICaL.jnca               = 1
ICaL.I1k                = 0
ICaL.I2k                = 0
ICaL.Ck                 = 1
ICaL.I1kp               = 0
ICaL.I2kp               = 0
ICaL.Ckp                = 1
ICaL.I1Cak              = 0
ICaL.I2Cak              = 0
ICaL.CCak               = 0
ICaL.I1Cakp             = 0
ICaL.I2Cakp             = 0
ICaL.CCakp              = 0
ICaL.Ok                 = 0
ICaL.Okp                = 0
IKr.IC1                 = 0.999637
IKr.IC2                 =  6.83207999999999982e-5
IKr.C1                  =  1.80144999999999990e-8
IKr.C2                  =  8.26618999999999954e-5
IKr.O                   =  1.55510000000000007e-4
IKr.IO                  =  5.67622999999999969e-5
IKr.IObound             = 0
IKr.Obound              = 0
IKr.Cbound              = 0
IKr.D                   = 0
IKs.xs1                 = 0
IKs.xs2                 = 0
IK1.xk1                 = 1
ryr.RyRa                = 0.03
ryr.RyRo                = 0
ryr.RyRc                = 1
ryr.RyRcp               = 1


[multipliers]
i_cal_pca_multiplier = 1
i_kr_multiplier = 1
i_ks_multiplier = 1
i_nal_multiplier = 1
i_na_multiplier = 1
jup_multiplier = 1
i_to_multiplier = 1
i_k1_multiplier = 1
i_NCX_multiplier = 1
i_nak_multiplier = 1
i_kb_multiplier = 1
jrel_multiplier = 1 

[CaMK]
CaMKa = CaMKb + CaMKt
    in [mM]
CaMKb = CaMKo * (1 [mM] - CaMKt) / (1 + KmCaM / intracellular_ions.cass)
    in [mM]
CaMKo = 0.05
    in [1]
dot(CaMKt) = aCaMK * CaMKb * (CaMKb + CaMKt) - bCaMK * CaMKt
    in [mM]
KmCaM = 0.0015 [mM]
    in [mM]
KmCaMK = 0.15 [mM]
    in [mM]
aCaMK = 0.05 [1/mM/ms]
    in [1/mM/ms]
bCaMK = 0.00068 [mS/uF]
    in [mS/uF]

[ICaL]
dot(CCak) = beta * OCak + psi_CD * I2Cak - (omega_CD + alpha) * CCak + r_up * Ck - r_down * CCak
    in [1]
dot(CCakp) = beta * OCakp + psi_CDp * I2Cakp - (omega_CDp + alpha) * CCakp + r_up * Ckp - r_down * CCakp
    in [1]
dot(Ck) = beta * Ok + psi_VD * I2k - (omega_VD + alpha) * Ck - r_up * Ck + r_down * CCak
    in [1]
dot(Ckp) = beta * Okp + psi_VDp * I2kp - (omega_VDp + alpha) * Ckp - r_up * Ckp + r_down * CCakp
    in [1]
dot(I1Cak) = theta_CD * I2Cak + gamma_CD * OCak - (eta_CD + delta_CD) * I1Cak + r_up * I1k - r_down * I1Cak
    in [1]
dot(I1Cakp) = theta_CDp * I2Cakp + gamma_CDp * OCakp - (eta_CDp + delta_CDp) * I1Cakp + r_up * I1kp - r_down * I1Cakp
    in [1]
dot(I1k) = theta_VD * I2k + gamma_VD * Ok - (eta_VD + delta_VD) * I1k - r_up * I1k + r_down * I1Cak
    in [1]
dot(I1kp) = theta_VDp * I2kp + gamma_VDp * Okp - (eta_VDp + delta_VDp) * I1kp - r_up * I1kp + r_down * I1Cakp
    in [1]
dot(I2Cak) = eta_CD * I1Cak + omega_CD * CCak - (theta_CD + psi_CD) * I2Cak + r_up * I2k - r_down * I2Cak
    in [1]
dot(I2Cakp) = eta_CDp * I1Cakp + omega_CDp * CCakp - (theta_CDp + psi_CDp) * I2Cakp + r_up * I2kp - r_down * I2Cakp
    in [1]
dot(I2k) = eta_VD * I1k + omega_VD * Ck - (theta_VD + psi_VD) * I2k - r_up * I2k + r_down * I2Cak
    in [1]
dot(I2kp) = eta_VDp * I1kp + omega_VDp * Ckp - (theta_VDp + psi_VDp) * I2kp - r_up * I2kp + r_down * I2Cakp
    in [1]
ICaK = (ICaKp * fICaLp + ICaKnp * (1 - fICaLp)) * bGCaL
    in [A/F]
ICaK_CD = PCaK * PhiCaK * OCak
    in [1]
ICaK_CDp = PCaKp * PhiCaK * OCakp
    in [1]
ICaK_VD = PCaK * PhiCaK * Ok
    in [1]
ICaK_VDp = PCaKp * PhiCaK * Okp
    in [1]
ICaKnp = ICaK_VD + ICaK_CD
    in [1]
ICaKp = ICaK_VDp + ICaK_CDp
    in [1]
ICaL = (ICaLp * fICaLp + ICaLnp * (1 - fICaLp)) * bGCaL
    in [A/F]
ICaLCD = ICaL_CD * (1 - fICaLp) + ICaL_CDp * fICaLp
    in [1]
ICaLVD = ICaL_VD * (1 - fICaLp) + ICaL_VDp * fICaLp
    in [1]
ICaL_CD = PCa * PhiCaL * OCak
    in [1]
ICaL_CDp = PCap * PhiCaL * OCakp
    in [1]
ICaL_VD = PCa * PhiCaL * Ok
    in [1]
ICaL_VDp = PCap * PhiCaL * Okp
    in [1]
ICaLnp = ICaL_VD + ICaL_CD
    in [1]
ICaLp = ICaL_VDp + ICaL_CDp
    in [1]
ICaNa = (ICaNap * fICaLp + ICaNanp * (1 - fICaLp)) * bGCaL
    in [A/F]
ICaNa_CD = PCaNa * PhiCaNa * OCak
    in [1]
ICaNa_CDp = PCaNap * PhiCaNa * OCakp
    in [1]
ICaNa_VD = PCaNa * PhiCaNa * Ok
    in [1]
ICaNa_VDp = PCaNap * PhiCaNa * Okp
    in [1]
ICaNanp = ICaNa_VD + ICaNa_CD
    in [1]
ICaNap = ICaNa_VDp + ICaNa_CDp
    in [1]
Kmn = 0.05 [mM]
    in [mM]
OCak = 1 - CCak - I1Cak - I2Cak - Ck - I1k - I2k - Ok
    in [1]
OCakp = 1 - CCakp - I1Cakp - I2Cakp - Ckp - I1kp - I2kp - Okp
    in [1]
dot(Ok) = alpha * Ck + delta_VD * I1k - (beta + gamma_VD) * Ok - r_up * Ok + r_down * OCak
    in [1]
dot(Okp) = alpha * Ckp + delta_VDp * I1kp - (beta + gamma_VDp) * Okp - r_up * Okp + r_down * OCakp
    in [1]
PCa = piecewise(engine.celltype == 1, PCa_b * 0.9 * 1.4, engine.celltype == 2, PCa_b * 0.9 * 2, PCa_b * 0.9)
    in [1]
PCaK = 0.0003574 * PCa
    in [1]
PCaKp = 0.0003574 * PCap
    in [1]
PCaNa = 0.00125 * PCa
    in [1]
PCaNap = 0.00125 * PCap
    in [1]
PCa_b = 0.0001 * multipliers.i_cal_pca_multiplier
    in [1]
PCap = 1.1 * PCa
    in [1]
PhiCaK = 1 * membrane.vffrt * (0.75 * intracellular_ions.kss * exp(1 * membrane.vfrt) - 0.75 * extracellular.ko) / (exp(1 * membrane.vfrt) - 1)
    in [s*A/m^3]
PhiCaL = 4 * membrane.vffrt * (1.2 * intracellular_ions.cass * exp(2 * membrane.vfrt) - 0.341 * extracellular.cao) / (exp(2 * membrane.vfrt) - 1)
    in [s*A/m^3]
PhiCaNa = 1 * membrane.vffrt * (0.75 * intracellular_ions.nass * exp(1 * membrane.vfrt) - 0.75 * extracellular.nao) / (exp(1 * membrane.vfrt) - 1)
    in [s*A/m^3]
alpha = dss / td
    in [1]
anca = (1 - nca) / (1 + Kmn / intracellular_ions.cass)^4
    in [1]
bGCaL = 1
    in [1]
beta = (1 - dss) / td
    in [1]
delta_CD = delta_VD * kCDI
    in [1]
delta_CDp = delta_VDp * kCDI
    in [1]
delta_VD = f1ss_0 / tf1_0
    in [1]
delta_VDp = delta_VD / ktaup
    in [1]
dss = 1 / (1 + exp(-(membrane.v + 3.94 [mV]) / 4.23 [mV]))
    in [1]
eta_CD = 1 / tf2_CD - theta_CD
    in [1]
eta_CDp = 1 / tf2_CDp - theta_CDp
    in [1]
eta_VD = 1 / tf2_VD - theta_VD
    in [1]
eta_VDp = 1 / tf2_VDp - theta_VDp
    in [1]
f1ss_0 = 0.8 / (1 + exp((membrane.v + 19.58 [mV]) / 3.696 [mV])) + 0.2
    in [1]
f1ss_CD = gamma_CD / (gamma_CD + delta_CD)
    in [1]
f1ss_VD = gamma_VD / (gamma_VD + delta_VD)
    in [1]
f2ss_CD = eta_CD / (eta_CD + theta_CD)
    in [1]
f2ss_VD = eta_VD / (eta_VD + theta_VD)
    in [1]
fICaLp = 1 / (1 + CaMK.KmCaMK / CaMK.CaMKa)
    in [1]
gICaL = ICaL / PhiCaL
    in [uF]
gamma_CD = gamma_VD * kCDI
    in [1]
gamma_CDp = gamma_VDp * kCDI
    in [1]
gamma_VD = (1 - f1ss_0) / tf1_0
    in [1]
gamma_VDp = gamma_VD / ktaup
    in [1]
jcass_CD = jcass_new
    in [1]
jcass_CDp = jcass_new
    in [1]
jcass_VD = jcass_new
    in [1]
jcass_VDp = jcass_new
    in [1]
jcass_new = 1 / (1 + exp((membrane.v + 19.58) / 3.696))
    in [1]
dot(jnca) = (jncass - jnca) / tjnca
    in [1]
jncass = 1 / (1 + exp((membrane.v + 19.58 [mV] + 25 [mV]) / 3.696 [mV]))
    in [1]
k2n = 1000 [mS/uF]
    in [mS/uF]
kCDI = 9
    in [1]
km2n = jnca * 150 [mS/uF]
    in [mS/uF]
kmn = 0.05 [mM]
    in [mM]
ktaup = 2.5
    in [1]
dot(nca) = anca * k2n - nca * km2n
    in [1]
omega_CD = (1 - jcass_CD) / tjca_CD
    in [1]
omega_CDp = (1 - jcass_CDp) / tjca_CDp
    in [1]
omega_VD = (1 - jcass_VD) / tjca_VD
    in [1]
omega_VDp = (1 - jcass_VDp) / tjca_VDp
    in [1]
psi_CD = jcass_CD / tjca_CD
    in [1]
psi_CDp = jcass_CDp / tjca_CDp
    in [1]
psi_VD = jcass_VD / tjca_VD
    in [1]
psi_VDp = jcass_VDp / tjca_VDp
    in [1]
r_down = 0.1 * (1 - undo_CDI)
    in [1]
r_up = r_down * nca / (1 - nca) * (1 - undo_CDI)
    in [1]
td = 0.6 [ms] + 1 [ms] / (exp(-0.05 [1/mV] * (membrane.v + 6 [mV])) + exp(0.09 [1/mV] * (membrane.v + 14 [mV])))
    in [ms]
tf1_0 = 1 * (70 + 1.2 / (0.0045 * exp((membrane.v + 20 [mV]) / -50 [mV]) + 0.0045 * exp((membrane.v + 30 [mV]) / 10 [mV])))
    in [1]
tf1_CD = 1 / (gamma_CD + delta_CD)
    in [1]
tf1_VD = 1 / (gamma_VD + delta_VD)
    in [1]
tf2_CD = tf2_VD / kCDI
    in [1]
tf2_CDp = tf2_VD / kCDI * ktaup
    in [1]
tf2_VD = tf2_new
    in [1]
tf2_VDp = tf2_new * ktaup
    in [1]
tf2_new = 1 * (100 + 0 / (0.0035 * exp((membrane.v + 5 [mV]) / -84 [mV]) + 0.0035 * exp((membrane.v + 5 [mV]) / 4 [mV])))
    in [1]
tf2post_CD = 1 / (eta_CD + theta_CD)
    in [1]
tf2post_VD = 1 / (eta_VD + theta_VD)
    in [1]
theta_CD = alpha * gamma_CD * psi_CD / tf2_CD / (alpha * gamma_CD * psi_CD + beta * delta_CD * omega_CD)
    in [1]
theta_CDp = alpha * gamma_CDp * psi_CDp / tf2_CDp / (alpha * gamma_CDp * psi_CDp + beta * delta_CDp * omega_CDp)
    in [1]
theta_VD = alpha * gamma_VD * psi_VD / tf2_VD / (alpha * gamma_VD * psi_VD + beta * delta_VD * omega_VD)
    in [1]
theta_VDp = alpha * gamma_VDp * psi_VDp / tf2_VDp / (alpha * gamma_VDp * psi_VDp + beta * delta_VDp * omega_VDp)
    in [1]
tjca_CD = tjca_new
    in [1]
tjca_CDp = tjca_new
    in [1]
tjca_VD = tjca_new
    in [1]
tjca_VDp = tjca_new
    in [1]
tjca_new = 35 + 350 * exp(-(membrane.v + 20 [mV])^2 / (2 [mV] * 100 [mV]))
    in [1]
tjnca = 1 [ms]
    in [ms]
undo_CDI = 0
    in [1]

[ICab]
ICab = (1 - undo_ICab) * PCab * 16 * membrane.vffrt * (1.2 * intracellular_ions.cai * exp(2 * membrane.vfrt) - 0.341 * extracellular.cao) / (exp(2 * membrane.vfrt) - 1)
    in [A/F]
PCab = 2.5e-8 [mS/uF]
    in [mS/uF]
undo_ICab = 0
    in [1]

[IK1]
EKshift = 8 [mV]
    in [mV]
GK1 = piecewise(engine.celltype == 1, bGK1 * GK1_b * 1.2, engine.celltype == 2, bGK1 * GK1_b * 1.3, bGK1 * GK1_b)
    in [mS/uF]
GK1_b = 0.1908 * multipliers.i_k1_multiplier
    in [mS/uF]
IK1 = GK1 * sqrt(extracellular.ko) * rk1 * xk1 * (membrane.v - reversal_potentials.EK)
    in [A/F]
bGK1 = 0.71
    in [1]
kslope_rk1 = 1.09
    in [1]
rk1 = 1 / (1 + exp((membrane.v + 105.8 [mV] - 2.6 [g*m^5/s^3/A/mol] * extracellular.ko + EKshift) / (kslope_rk1 * 9.493 [mV])))
    in [ms]
txk1 = 122.2 [ms] / (exp(-(membrane.v + EKshift + 127.2 [mV]) / 20.36 [mV]) + exp((membrane.v + EKshift + 236.8 [mV]) / 69.33 [mV]))
    in [ms]
dot(xk1) = (xk1ss - xk1) / txk1
    in [1]
xk1ss = 1 / (1 + exp(-(membrane.v + 2.5538 [g*m^5/s^3/A/mol] * extracellular.ko + 144.59 [mV] + EKshift) / (1.5692 [g*m^5/s^3/A/mol] * extracellular.ko + 3.8115 [mV])))
    in [1]

[IKb]
GKb = piecewise(engine.celltype == 1, GKb_b * 0.6, GKb_b)
    in [mS/uF]
GKb_b = 0.003 * multipliers.i_kb_multiplier
    in [mS/uF]
IKb = GKb * xkb * (membrane.v - reversal_potentials.EK)
    in [A/F]
xkb = 1 / (1 + exp(-(membrane.v - 14.48 [mV]) / 18.34 [mV]))
    in [1]

[IKr]
A1 = 0.0264 [mS/uF]
    in [mS/uF]
A11 = 0.0007868 [mS/uF]
    in [mS/uF]
A2 = 4.986e-6 [mS/uF]
    in [mS/uF]
A21 = 5.455e-6 [mS/uF]
    in [mS/uF]
A3 = 0.001214 [mS/uF]
    in [mS/uF]
A31 = 0.005509 [mS/uF]
    in [mS/uF]
A4 = 1.854e-5 [mS/uF]
    in [mS/uF]
A41 = 0.001416 [mS/uF]
    in [mS/uF]
A51 = 0.4492 [mS/uF]
    in [mS/uF]
A52 = 0.3181 [mS/uF]
    in [mS/uF]
A53 = 0.149 [mS/uF]
    in [mS/uF]
A61 = 0.01241 [mS/uF]
    in [mS/uF]
A62 = 0.3226 [mS/uF]
    in [mS/uF]
A63 = 0.008978 [mS/uF]
    in [mS/uF]
B1 = 4.631e-5 [1/mV]
    in [1/mV]
B11 = 1.535e-8 [1/mV]
    in [1/mV]
B2 = -0.004226 [1/mV]
    in [1/mV]
B21 = -0.1688 [1/mV]
    in [1/mV]
B3 = 0.008516 [1/mV]
    in [1/mV]
B31 = 7.771e-9 [1/mV]
    in [1/mV]
B4 = -0.04641 [1/mV]
    in [1/mV]
B41 = -0.02877 [1/mV]
    in [1/mV]
B51 = 0.008595 [1/mV]
    in [1/mV]
B52 = 3.613e-8 [1/mV]
    in [1/mV]
B53 = 0.004668 [1/mV]
    in [1/mV]
B61 = 0.1725 [1/mV]
    in [1/mV]
B62 = -6.57499999999999990e-4 [1/mV]
    in [1/mV]
B63 = -0.02215 [1/mV]
    in [1/mV]
dot(C1) = -(A1 * exp(B1 * membrane.v) * C1 * exp((Temp - 293 [K]) * log(q1) / 10 [K]) - A2 * exp(B2 * membrane.v) * C2 * exp((Temp - 293 [K]) * log(q2) / 10 [K])) - (A51 * exp(B51 * membrane.v) * C1 * exp((Temp - 293 [K]) * log(q51) / 10 [K]) - A61 * exp(B61 * membrane.v) * IC1 * exp((Temp - 293 [K]) * log(q61) / 10 [K]))
    in [1]
dot(C2) = A1 * exp(B1 * membrane.v) * C1 * exp((Temp - 293 [K]) * log(q1) / 10 [K]) - A2 * exp(B2 * membrane.v) * C2 * exp((Temp - 293 [K]) * log(q2) / 10 [K]) - (A31 * exp(B31 * membrane.v) * C2 * exp((Temp - 293 [K]) * log(q31) / 10 [K]) - A41 * exp(B41 * membrane.v) * O * exp((Temp - 293 [K]) * log(q41) / 10 [K])) - (A52 * exp(B52 * membrane.v) * C2 * exp((Temp - 293 [K]) * log(q52) / 10 [K]) - A62 * exp(B62 * membrane.v) * IC2 * exp((Temp - 293 [K]) * log(q62) / 10 [K]))
    in [1]
dot(Cbound) = -(Kt / (1 + exp(-(membrane.v - Vhalf) / 6.789 [mV])) * Cbound - Kt * Obound) - (Kt / (1 + exp(-(membrane.v - Vhalf) / 6.789 [mV])) * Cbound - Kt * IObound)
    in [1]
dot(D) = 0
    in [1]
GKr = piecewise(engine.celltype == 1, GKr_b * bGKr * 1.1, engine.celltype == 2, GKr_b * bGKr * 0.8, GKr_b * bGKr)
    in [mS/uF]
GKr_b = 0.046 * multipliers.i_kr_multiplier
    in [mS/uF]
GKr_total = GKr * sqrt(extracellular.ko / 5.4 [mM])
    in [mS/uF]
dot(IC1) = -(A11 * exp(B11 * membrane.v) * IC1 * exp((Temp - 293 [K]) * log(q11) / 10 [K]) - A21 * exp(B21 * membrane.v) * IC2 * exp((Temp - 293 [K]) * log(q21) / 10 [K])) + A51 * exp(B51 * membrane.v) * C1 * exp((Temp - 293 [K]) * log(q51) / 10 [K]) - A61 * exp(B61 * membrane.v) * IC1 * exp((Temp - 293 [K]) * log(q61) / 10 [K])
    in [1]
dot(IC2) = A11 * exp(B11 * membrane.v) * IC1 * exp((Temp - 293 [K]) * log(q11) / 10 [K]) - A21 * exp(B21 * membrane.v) * IC2 * exp((Temp - 293 [K]) * log(q21) / 10 [K]) - (A3 * exp(B3 * membrane.v) * IC2 * exp((Temp - 293 [K]) * log(q3) / 10 [K]) - A4 * exp(B4 * membrane.v) * IO * exp((Temp - 293 [K]) * log(q4) / 10 [K])) + A52 * exp(B52 * membrane.v) * C2 * exp((Temp - 293 [K]) * log(q52) / 10 [K]) - A62 * exp(B62 * membrane.v) * IC2 * exp((Temp - 293 [K]) * log(q62) / 10 [K])
    in [1]
IKr = GKr_total * O * (membrane.v - reversal_potentials.EK)
    in [A/F]
dot(IO) = A3 * exp(B3 * membrane.v) * IC2 * exp((Temp - 293 [K]) * log(q3) / 10 [K]) - A4 * exp(B4 * membrane.v) * IO * exp((Temp - 293 [K]) * log(q4) / 10 [K]) + A53 * exp(B53 * membrane.v) * O * exp((Temp - 293 [K]) * log(q53) / 10 [K]) - A63 * exp(B63 * membrane.v) * IO * exp((Temp - 293 [K]) * log(q63) / 10 [K]) - (Kmax * Ku * exp(n * log(D)) / (exp(n * log(D)) + halfmax) * IO - Ku * A53 * exp(B53 * membrane.v) * exp((Temp - 293 [K]) * log(q53) / 10 [K]) / (A63 * exp(B63 * membrane.v) * exp((Temp - 293 [K]) * log(q63) / 10 [K])) * IObound)
    in [1]
dot(IObound) = Kmax * Ku * exp(n * log(D)) / (exp(n * log(D)) + halfmax) * IO - Ku * A53 * exp(B53 * membrane.v) * exp((Temp - 293 [K]) * log(q53) / 10 [K]) / (A63 * exp(B63 * membrane.v) * exp((Temp - 293 [K]) * log(q63) / 10)) * IObound + Kt / (1 + exp(-(membrane.v - Vhalf) / 6.789 [mV])) * Cbound - Kt * IObound
    in [1]
Kmax = 0
    in [1]
Kt = 3.5e-5 [mS/uF]
    in [mS/uF]
Ku = 0 [mS/uF]
    in [mS/uF]
dot(O) = A31 * exp(B31 * membrane.v) * C2 * exp((Temp - 293 [K]) * log(q31) / 10 [K]) - A41 * exp(B41 * membrane.v) * O * exp((Temp - 293 [K]) * log(q41) / 10 [K]) - (A53 * exp(B53 * membrane.v) * O * exp((Temp - 293 [K]) * log(q53) / 10 [K]) - A63 * exp(B63 * membrane.v) * IO * exp((Temp - 293 [K]) * log(q63) / 10 [K])) - (Kmax * Ku * exp(n * log(D)) / (exp(n * log(D)) + halfmax) * O - Ku * Obound)
    in [1]
dot(Obound) = Kmax * Ku * exp(n * log(D)) / (exp(n * log(D)) + halfmax) * O - Ku * Obound + Kt / (1 + exp(-(membrane.v - Vhalf) / 6.789 [mV])) * Cbound - Kt * Obound
    in [1]
Temp = 310 [K]
    in [K]
Vhalf = 1 [mV]
    in [mV]
bGKr = 1.2
    in [1]
halfmax = 1
    in [1]
n = 1
    in [1]
q1 = 4.843
    in [1]
q11 = 4.942
    in [1]
q2 = 4.23
    in [1]
q21 = 4.156
    in [1]
q3 = 4.962
    in [1]
q31 = 4.22
    in [1]
q4 = 3.769
    in [1]
q41 = 1.459
    in [1]
q51 = 5
    in [1]
q52 = 4.663
    in [1]
q53 = 2.412
    in [1]
q61 = 5.568
    in [1]
q62 = 5
    in [1]
q63 = 5.682
    in [1]

[IKs]
EKshift = 8 [mV]
    in [mV]
GKs = piecewise(engine.celltype == 1, bGKs * GKs_b * 1.4, bGKs * GKs_b)
    in [mS/uF]
GKs_b = 0.0034 * multipliers.i_ks_multiplier
    in [mS/uF]
IKs = GKs * KsCa * xs1 * xs2 * (membrane.v - reversal_potentials.EKs)
    in [A/F]
KsCa = 1 + 0.6 / (1 + (3.8e-5 [mM] / intracellular_ions.cai)^1.4)
    in [1]
bGKs = 2 [mS/uF]
    in [mS/uF]
txs1 = 817.3 [ms] + 1 [ms] / (0.0002326 * exp((membrane.v + 48.28 [mV] + EKshift) / 17.8 [mV]) + 0.001292 * exp(-(membrane.v + 210 [mV] + EKshift) / 230 [mV]))
    in [ms]
txs1_max = 817.3 [ms]
    in [ms]
txs2 = 1 [ms] / (0.01 * exp((membrane.v - 50 [mV] + EKshift) / 20 [mV]) + 0.0193 * exp(-(membrane.v + 66.54 [mV] + EKshift) / 31 [mV]))
    in [ms]
dot(xs1) = (xs1ss - xs1) / txs1
    in [1]
xs1ss = 1 / (1 + exp(-(membrane.v + 11.6 [mV] + EKshift) / 8.932 [mV]))
    in [1]
dot(xs2) = (xs2ss - xs2) / txs2
    in [1]
xs2ss = xs1ss
    in [1]

[INa]
Ahf = 0.99
    in [1]
Ahs = 1 - Ahf
    in [1]
GNa = 75 * multipliers.i_na_multiplier
    in [mS/uF]
INa = GNa * bGNa * (membrane.v - reversal_potentials.ENa) * m^3 * ((1 - fINap) * h * j + fINap * hp * jp)
    in [A/F]
bGNa = 0.27
    in [1]
btj = 1
    in [1]
fINap = 1 / (1 + CaMK.KmCaMK / CaMK.CaMKa)
    in [1]
h = Ahf * hf + Ahs * hs
    in [1]
dot(hf) = (hss - hf) / thf
    in [1]
hp = Ahf * hf + Ahs * hsp
    in [1]
dot(hs) = (hss - hs) / ths
    in [1]
dot(hsp) = (hssp - hsp) / thsp
    in [1]
hss = 1 / (1 + exp((membrane.v + hssV1) / hssV2))
    in [1]
hssV1 = 78.5 [mV]
    in [mV]
hssV2 = 6.22 [mV]
    in [mV]
hssp = 1 / (1 + exp((membrane.v + 84.7 [mV]) / 6.22 [mV]))
    in [1]
dot(j) = (jss - j) / tj
    in [1]
dot(jp) = (jss - jp) / tjp
    in [1]
jss = hss
    in [1]
dot(m) = (mss - m) / tm
    in [1]
mss = 1 / (1 + exp(-(membrane.v + mssV1) / mssV2))
    in [1]
mssV1 = 39.57 [mV]
    in [mV]
mssV2 = 9.871 [mV]
    in [mV]
mtD1 = 6.765
    in [1]
mtD2 = 8.552
    in [1]
mtV1 = 11.64 [mV]
    in [mV]
mtV2 = 34.77 [mV]
    in [mV]
mtV3 = 77.42 [mV]
    in [mV]
mtV4 = 5.955 [mV]
    in [mV]
thf = 1 [ms] / (3.686e-6 * exp(-(membrane.v + 3.8875 [mV]) / 7.8579 [mV]) + 16 * exp((membrane.v - 0.4963 [mV]) / 9.1843 [mV])) + 0.075
    in [ms]
ths = 1 [ms] / (0.009794 * exp(-(membrane.v + 17.95 [mV]) / 28.05 [mV]) + 0.3343 * exp((membrane.v + 5.73 [mV]) / 56.66 [mV]))
    in [ms]
thsp = 3 * ths
    in [ms]
tj = (4.859 [ms] + 1 [ms] / (0.8628 * exp(-(membrane.v + 116.7258 [mV]) / 7.6005 [mV]) + 1.1096 * exp((membrane.v + 6.2719 [mV]) / 9.0358 [mV]))) * btj
    in [ms]
tjp = 1.46 * tj
    in [ms]
tm = 1 [ms] / (mtD1 * exp((membrane.v + mtV1) / mtV2) + mtD2 * exp(-(membrane.v + mtV3) / mtV4))
    in [ms]

[INaCa_i]
E1_i = x1_i / (x1_i + x2_i + x3_i + x4_i)
    in [1]
E1_ss = x1_ss / (x1_ss + x2_ss + x3_ss + x4_ss)
    in [1]
E2_i = x2_i / (x1_i + x2_i + x3_i + x4_i)
    in [1]
E2_ss = x2_ss / (x1_ss + x2_ss + x3_ss + x4_ss)
    in [1]
E3_i = x3_i / (x1_i + x2_i + x3_i + x4_i)
    in [1]
E3_ss = x3_ss / (x1_ss + x2_ss + x3_ss + x4_ss)
    in [1]
E4_i = x4_i / (x1_i + x2_i + x3_i + x4_i)
    in [1]
E4_ss = x4_ss / (x1_ss + x2_ss + x3_ss + x4_ss)
    in [1]
Gncx = piecewise(engine.celltype == 1, bGncx * Gncx_b * 1.2, engine.celltype == 2, bGncx * Gncx_b * 1.4, bGncx * Gncx_b)
    in [mS/uF]
Gncx_b = 0.0008 * multipliers.i_NCX_multiplier
    in [mS/uF]
INaCa_i = 0.8 * Gncx * allo_i * (physical_constants.zna * JncxNa_i + physical_constants.zca * JncxCa_i)
    in [A/F]
INaCa_ss = 0.2 * Gncx * allo_ss * (physical_constants.zna * JncxNa_ss + physical_constants.zca * JncxCa_ss)
    in [A/F]
JncxCa_i = E2_i * k2_i - E1_i * k1_i
    in [mM/ms]
JncxCa_ss = E2_ss * k2_ss - E1_ss * k1_ss
    in [mM/ms]
JncxNa_i = 3 * (E4_i * k7_i - E1_i * k8_i) + E3_i * k4pp_i - E2_i * k3pp_i
    in [mM/ms]
JncxNa_ss = 3 * (E4_ss * k7_ss - E1_ss * k8_ss) + E3_ss * k4pp_ss - E2_ss * k3pp_ss
    in [mM/ms]
KmCaAct = 0.00015 [mM]
    in [mM]
allo_i = 1 / (1 + (KmCaAct / intracellular_ions.cai)^2)
    in [1]
allo_ss = 1 / (1 + (KmCaAct / intracellular_ions.cass)^2)
    in [1]
bGncx = 2.4
    in [1]
h10_i = kasymm + 1 + extracellular.nao / kna1 * (1 + extracellular.nao / kna2)
    in [1]
h10_ss = kasymm + 1 + extracellular.nao / kna1 * (1 + extracellular.nao / kna2)
    in [1]
h11_i = extracellular.nao * extracellular.nao / (h10_i * kna1 * kna2)
    in [1]
h11_ss = extracellular.nao * extracellular.nao / (h10_ss * kna1 * kna2)
    in [1]
h12_i = 1 / h10_i
    in [1]
h12_ss = 1 / h10_ss
    in [1]
h1_i = 1 + intracellular_ions.nai / kna3 * (1 + hna)
    in [1]
h1_ss = 1 + intracellular_ions.nass / kna3 * (1 + hna)
    in [1]
h2_i = intracellular_ions.nai * hna / (kna3 * h1_i)
    in [1]
h2_ss = intracellular_ions.nass * hna / (kna3 * h1_ss)
    in [1]
h3_i = 1 / h1_i
    in [1]
h3_ss = 1 / h1_ss
    in [1]
h4_i = 1 + intracellular_ions.nai / kna1 * (1 + intracellular_ions.nai / kna2)
    in [1]
h4_ss = 1 + intracellular_ions.nass / kna1 * (1 + intracellular_ions.nass / kna2)
    in [1]
h5_i = intracellular_ions.nai * intracellular_ions.nai / (h4_i * kna1 * kna2)
    in [1]
h5_ss = intracellular_ions.nass * intracellular_ions.nass / (h4_ss * kna1 * kna2)
    in [1]
h6_i = 1 / h4_i
    in [1]
h6_ss = 1 / h4_ss
    in [1]
h7_i = 1 + extracellular.nao / kna3 * (1 + 1 / hna)
    in [1]
h7_ss = 1 + extracellular.nao / kna3 * (1 + 1 / hna)
    in [1]
h8_i = extracellular.nao / (kna3 * hna * h7_i)
    in [1]
h8_ss = extracellular.nao / (kna3 * hna * h7_ss)
    in [1]
h9_i = 1 / h7_i
    in [1]
h9_ss = 1 / h7_ss
    in [1]
hca = exp(qca * membrane.v * physical_constants.F / (physical_constants.R * physical_constants.T))
    in [1]
hna = exp(qna * membrane.v * physical_constants.F / (physical_constants.R * physical_constants.T))
    in [1]
k1_i = h12_i * extracellular.cao * kcaon
    in [1]
k1_ss = h12_ss * extracellular.cao * kcaon
    in [1]
k2_i = kcaoff
    in [1]
k2_ss = kcaoff
    in [1]
k3_i = k3p_i + k3pp_i
    in [1]
k3_ss = k3p_ss + k3pp_ss
    in [1]
k3p_i = h9_i * wca
    in [1]
k3p_ss = h9_ss * wca
    in [1]
k3pp_i = h8_i * wnaca
    in [1]
k3pp_ss = h8_ss * wnaca
    in [1]
k4_i = k4p_i + k4pp_i
    in [1]
k4_ss = k4p_ss + k4pp_ss
    in [1]
k4p_i = h3_i * wca / hca
    in [1]
k4p_ss = h3_ss * wca / hca
    in [1]
k4pp_i = h2_i * wnaca
    in [1]
k4pp_ss = h2_ss * wnaca
    in [1]
k5_i = kcaoff
    in [1]
k5_ss = kcaoff
    in [1]
k6_i = h6_i * intracellular_ions.cai * kcaon
    in [1]
k6_ss = h6_ss * intracellular_ions.cass * kcaon
    in [1]
k7_i = h5_i * h2_i * wna
    in [1]
k7_ss = h5_ss * h2_ss * wna
    in [1]
k8_i = h8_i * h11_i * wna
    in [1]
k8_ss = h8_ss * h11_ss * wna
    in [1]
kasymm = 12.5
    in [1]
kcaoff = 5000 [mS/uF]
    in [mS/uF]
kcaon = 1500000 [mS/uF]
    in [mS/uF]
kna1 = 15 [mS/uF]
    in [mS/uF]
kna2 = 5 [mS/uF]
    in [mS/uF]
kna3 = 88.12 [mS/uF]
    in [mS/uF]
qca = 0.167
    in [1]
qna = 0.5224
    in [1]
wca = 60000
    in [1]
wna = 60000
    in [1]
wnaca = 5000
    in [1]
x1_i = k2_i * k4_i * (k7_i + k6_i) + k5_i * k7_i * (k2_i + k3_i)
    in [1]
x1_ss = k2_ss * k4_ss * (k7_ss + k6_ss) + k5_ss * k7_ss * (k2_ss + k3_ss)
    in [1]
x2_i = k1_i * k7_i * (k4_i + k5_i) + k4_i * k6_i * (k1_i + k8_i)
    in [1]
x2_ss = k1_ss * k7_ss * (k4_ss + k5_ss) + k4_ss * k6_ss * (k1_ss + k8_ss)
    in [1]
x3_i = k1_i * k3_i * (k7_i + k6_i) + k8_i * k6_i * (k2_i + k3_i)
    in [1]
x3_ss = k1_ss * k3_ss * (k7_ss + k6_ss) + k8_ss * k6_ss * (k2_ss + k3_ss)
    in [1]
x4_i = k2_i * k8_i * (k4_i + k5_i) + k3_i * k5_i * (k1_i + k8_i)
    in [1]
x4_ss = k2_ss * k8_ss * (k4_ss + k5_ss) + k3_ss * k5_ss * (k1_ss + k8_ss)
    in [1]

[INaK]
E1 = x1 / (x1 + x2 + x3 + x4)
    in [1]
E2 = x2 / (x1 + x2 + x3 + x4)
    in [1]
E3 = x3 / (x1 + x2 + x3 + x4)
    in [1]
E4 = x4 / (x1 + x2 + x3 + x4)
    in [1]
H = 1e-7 [mM]
    in [mM]
INaK = Pnak * (physical_constants.zna * JnakNa + physical_constants.zk * JnakK)
    in [A/F]
JnakK = 2 * (E4 * b1 - E3 * a1)
    in [mM/ms]
JnakNa = 3 * (E1 * a3 - E2 * b3)
    in [mM/ms]
Khp = 1.698e-7 [mM]
    in [mM]
Kki = 0.5 [mS/uF]
    in [mS/uF]
Kko = 0.3582 [mS/uF]
    in [mS/uF]
Kmgatp = 1.698e-7 [mM]
    in [mM]
Knai = Knai0 * exp(delta * membrane.v * physical_constants.F / (3 * physical_constants.R * physical_constants.T))
    in [mM]
Knai0 = 9.073 [mM]
    in [mM]
Knao = Knao0 * exp((1 - delta) * membrane.v * physical_constants.F / (3 * physical_constants.R * physical_constants.T))
    in [mM]
Knao0 = 27.78 [mM]
    in [mM]
Knap = 224 [mM]
    in [mM]
Kxkur = 292 [mM]
    in [mM]
MgADP = 0.05 [mM]
    in [mM]
MgATP = 9.8 [mM]
    in [mM]
P = eP / (1 + H / Khp + intracellular_ions.nai / Knap + intracellular_ions.ki / Kxkur)
    in [1]
Pnak = piecewise(engine.celltype == 1, bGnak * Pnak_b * 0.9, engine.celltype == 2, bGnak * Pnak_b * 0.7, bGnak * Pnak_b)
    in [mS/uF]
Pnak_b = 30 * multipliers.i_nak_multiplier
    in [mS/uF]
a1 = k1p * (intracellular_ions.nai / Knai)^3 / ((1 + intracellular_ions.nai / Knai)^3 + (1 + intracellular_ions.ki / Kki)^2 - 1)
    in [1]
a2 = k2p
    in [1]
a3 = k3p * (extracellular.ko / Kko)^2 / ((1 + extracellular.nao / Knao)^3 + (1 + extracellular.ko / Kko)^2 - 1)
    in [1]
a4 = k4p * MgATP / Kmgatp / (1 + MgATP / Kmgatp)
    in [1]
b1 = k1m * MgADP
    in [1]
b2 = k2m * (extracellular.nao / Knao)^3 / ((1 + extracellular.nao / Knao)^3 + (1 + extracellular.ko / Kko)^2 - 1)
    in [1]
b3 = k3m * P * H / (1 + MgATP / Kmgatp)
    in [1]
b4 = k4m * (intracellular_ions.ki / Kki)^2 / ((1 + intracellular_ions.nai / Knai)^3 + (1 + intracellular_ions.ki / Kki)^2 - 1)
    in [1]
bGnak = 2
    in [1]
delta = -0.155 [mV]
    in [mV]
eP = 4.2
    in [1]
k1m = 182.4 [mS/uF]
    in [mS/uF]
k1p = 949.5 [mS/uF]
    in [mS/uF]
k2m = 39.4 [mS/uF]
    in [mS/uF]
k2p = 687.2 [mS/uF]
    in [mS/uF]
k3m = 79300 [mS/uF]
    in [mS/uF]
k3p = 1899 [mS/uF]
    in [mS/uF]
k4m = 40 [mS/uF]
    in [mS/uF]
k4p = 639 [mS/uF]
    in [mS/uF]
x1 = a4 * a1 * a2 + b2 * b4 * b3 + a2 * b4 * b3 + b3 * a1 * a2
    in [1]
x2 = b2 * b1 * b4 + a1 * a2 * a3 + a3 * b1 * b4 + a2 * a3 * b4
    in [1]
x3 = a2 * a3 * a4 + b3 * b2 * b1 + b2 * b1 * a4 + a3 * a4 * b1
    in [1]
x4 = b4 * b3 * b2 + a3 * a4 * a1 + b2 * a4 * a1 + b3 * b2 * a1
    in [1]

[INaL]
GNaL = piecewise(engine.celltype == 1, GNaL_b * bGnal * 0.7, GNaL_b * bGnal)
    in [mS/uF]
GNaL_b = 0.0075 * multipliers.i_nal_multiplier
    in [mS/uF]
INaL = GNaL * (membrane.v - reversal_potentials.ENa) * mL * ((1 - fINaLp) * hL + fINaLp * hLp)
    in [A/F]
bGnal = 2.8
    in [1]
bthL = 1
    in [1]
fINaLp = 1 / (1 + CaMK.KmCaMK / CaMK.CaMKa)
    in [1]
dot(hL) = (hLss - hL) / thL
    in [1]
dot(hLp) = (hLssp - hLp) / thLp
    in [1]
hLss = 1 / (1 + exp((membrane.v + 87.61 [mV]) / 7.488 [mV]))
    in [1]
hLssp = 1 / (1 + exp((membrane.v + 93.81 [mV]) / 7.488 [mV]))
    in [1]
dot(mL) = (mLss - mL) / tmL
    in [1]
mLss = 1 / (1 + exp(-(membrane.v + 42.85 [mV]) / 5.264 [mV]))
    in [1]
thL = 200 [ms] * bthL
    in [ms]
thLp = 3 * thL
    in [ms]
tmL = INa.tm
    in [ms]

[INab]
INab = PNab * membrane.vffrt * (intracellular_ions.nai * exp(membrane.vfrt) - extracellular.nao) / (exp(membrane.vfrt) - 1)
    in [A/F]
PNab = 3.75e-10 [mS/uF]
    in [mS/uF]

[IpCa]
GpCa = 0.0005 [mS/uF]
    in [mS/uF]
IpCa = GpCa * intracellular_ions.cai / (KmCap + intracellular_ions.cai)
    in [A/F]
KmCap = 0.0005 [mM]
    in [mM]

[Ito]
AiF = 1 / (1 + exp((membrane.v + EKshift - 213.6 [mV]) / 151.2 [mV]))
    in [1]
AiS = 1 - AiF
    in [1]
EKshift = 8 [mV]
    in [mV]
Gto = piecewise(engine.celltype == 1, bGto * Gto_b * 4, engine.celltype == 2, bGto * Gto_b * 4, Gto_b * bGto)
    in [mS/uF]
Gto_b = 0.02 * multipliers.i_to_multiplier
    in [mS/uF]
Ito = Gto * (membrane.v - reversal_potentials.EK) * ((1 - fItop) * a * i + fItop * ap * ip)
    in [A/F]
dot(a) = (ass - a) / ta
    in [1]
dot(ap) = (assp - ap) / ta
    in [1]
ass = 1 / (1 + exp(-(membrane.v + EKshift - 14.34 [mV]) / 14.82 [mV]))
    in [1]
assp = 1 / (1 + exp(-(membrane.v + EKshift - 24.34 [mV]) / 14.82 [mV]))
    in [1]
bGto = 1
    in [1]
delta_epi = piecewise(engine.celltype == 1, 1 - 0.95 / (1 + exp((membrane.v + EKshift + 70 [mV]) / 5 [mV])), 1)
    in [1]
dti_develop = 1.354 + 0.0001 / (exp((membrane.v + EKshift - 167.4 [mV]) / 15.89 [mV]) + exp(-(membrane.v + EKshift - 12.23 [mV]) / 0.2154 [mV]))
    in [1]
dti_recover = 1 - 0.5 / (1 + exp((membrane.v + EKshift + 70 [mV]) / 20 [mV]))
    in [1]
fItop = 1 / (1 + CaMK.KmCaMK / CaMK.CaMKa)
    in [1]
i = AiF * iF + AiS * iS
    in [1]
dot(iF) = (iss - iF) / tiF
    in [1]
dot(iFp) = (iss - iFp) / tiFp
    in [1]
dot(iS) = (iss - iS) / tiS
    in [1]
dot(iSp) = (iss - iSp) / tiSp
    in [1]
ip = AiF * iFp + AiS * iSp
    in [1]
iss = 1 / (1 + exp((membrane.v + EKshift + 43.94 [mV]) / 5.711 [mV]))
    in [1]
ta = 1.0515 [ms] / (1 / (1.2089 * (1 + exp(-(membrane.v + EKshift - 18.4099 [mV]) / 29.3814 [mV]))) + 3.5 / (1 + exp((membrane.v + EKshift + 100 [mV]) / 29.3814 [mV])))
    in [ms]
tiF = tiF_b * delta_epi
    in [ms]
tiF_b = 4.562 [ms] + 1 [ms] / (0.3933 * exp(-(membrane.v + EKshift + 100 [mV]) / 100 [mV]) + 0.08004 * exp((membrane.v + EKshift + 50 [mV]) / 16.59 [mV]))
    in [ms]
tiFp = dti_develop * dti_recover * tiF
    in [ms]
tiS = tiS_b * delta_epi
    in [ms]
tiS_b = 23.62 [ms] + 1 [ms] / (0.001416 * exp(-(membrane.v + EKshift + 96.52 [mV]) / 59.05 [mV]) + 1.78e-8 * exp((membrane.v + EKshift + 114.1 [mV]) / 8.079 [mV]))
    in [ms]
tiSp = dti_develop * dti_recover * tiS
    in [ms]

[SERCA]
Jleak = multipliers.jup_multiplier * 0.0123 [mM/ms] * intracellular_ions.casr / 15 [mM]
    in [mM/ms]
Jup = cJup * ((1 - fJupp) * Jupnp + fJupp * Jupp)
    in [mM/ms]
Jup2 = Vmax_SRCaP * ((intracellular_ions.cai / Kmf)^hillSRCaP - (intracellular_ions.casr / Kmr)^hillSRCaP) / (1 + (intracellular_ions.cai / Kmf)^hillSRCaP + (intracellular_ions.casr / Kmr)^hillSRCaP)
    in [mM/ms]
Jup_b = 1
    in [1]
Jupnp = multipliers.jup_multiplier * upScale * 0.004375 * intracellular_ions.cai / (intracellular_ions.cai + 0.00092 [mM])
    in [mM/ms]
Jupp = multipliers.jup_multiplier * upScale * 2.75 * 0.004375 * intracellular_ions.cai / (intracellular_ions.cai + 0.00092 [mM] - 0.00017 [mM])
    in [mM/ms]
Kmf = 0.000246 [mM]
    in [mM]
Kmr = 1.7 [mM]
    in [mM]
Vmax_SRCaP = 1 * 0.0053114 [mM/ms]
    in [mM/ms]
cJup = 3.13
    in [1]
fJupp = 1 / (1 + CaMK.KmCaMK / CaMK.CaMKa)
    in [1]
hillSRCaP = 1.787 [mM]
    in [mM]
upScale = piecewise(engine.celltype == 1, 1.3, 1)
    in [1]

[cell_geometry]
Acap = 2 * Ageo
    in [cm^2]
Ageo = 2 * 3.1416 * rad * rad + 2 * 3.1416 * rad * L
    in [cm^2]
L = 0.01 [cm]
    in [cm]
rad = 0.0011 [cm]
    in [cm]
vcell = 1000 [1 (0.001)] * 3.1416 * rad * rad * L
    in [uL]
vjsr = 0.0048 * vcell
    in [uL]
vmyo = 0.68 * vcell
    in [uL]
vnsr = 0.0552 * vcell
    in [uL]
vsr = 0.95 * (vnsr + vjsr)
    in [uL]
vss = 0.02 * vcell
    in [uL]

[diff]
Jdiff = (intracellular_ions.cass - intracellular_ions.cai) * 1.7 / 0.2
    in [mM/ms]
JdiffK = (intracellular_ions.kss - intracellular_ions.ki) / 2
    in [mM/ms]
JdiffNa = (intracellular_ions.nass - intracellular_ions.nai) / 2
    in [mM/ms]

[engine]
celltype = 0
    in [1]
pace = 0
    bind pace
time = 0 [ms] bind time
    in [ms]

[stimulus]
i_stim = engine.pace * amplitude
    in [A/F]
amplitude = -10 [A/F]
    in [A/F]

[extracellular]
cao = 1.8 [mM]
    in [mM]
#cao = 2.7 [mM]
#    in [mM]
#ko = 4 [mM]
#    in [mM]
ko = 5.4 [mM]
    in [mM]
nao = 144 [mM]
    in [mM]

[intracellular_ions]
BSLmax = 1.124 [mM]
    in [mM]
BSRmax = 0.047 [mM]
    in [mM]
Bcai = 1 / (1 + cmdnmax * kmcmdn / (kmcmdn + cai)^2 + trpnmax * kmtrpn / (kmtrpn + cai)^2)
    in [1]
Bcasr = 1 / (1 + csqnmax * kmcsqn / (kmcsqn + casr)^2)
    in [1]
Bcass = 1 / (1 + BSRmax * KmBSR / (KmBSR + cass)^2 + BSLmax * KmBSL / (KmBSL + cass)^2)
    in [1]
KmBSL = 0.0087 [mM]
    in [mM]
KmBSR = 0.00087 [mM]
    in [mM]
dot(cai) = Bcai * (-(IpCa.IpCa + ICab.ICab - 2 * INaCa_i.INaCa_i) * cell_geometry.Acap / (2 * physical_constants.F * cell_geometry.vmyo) - SERCA.Jup * cell_geometry.vsr / cell_geometry.vmyo + SERCA.Jleak * cell_geometry.vsr / cell_geometry.vmyo + diff.Jdiff * cell_geometry.vss / cell_geometry.vmyo)
    in [mM]
cajsr =  8.21364973867864001e-1 [mM]
    in [mM]
cansr =  1.50490908825974001 [mM]
    in [mM]
dot(casr) = Bcasr * (SERCA.Jup - SERCA.Jleak - ryr.Jrel)
    in [mM]
dot(cass) = Bcass * (-(ICaL.ICaL - 2 * INaCa_i.INaCa_ss) * cell_geometry.Acap / (2 * physical_constants.F * cell_geometry.vss) + ryr.Jrel * cell_geometry.vsr / cell_geometry.vss - diff.Jdiff)
    in [mM]
cm = 1 [uF/cm^2]
    in [uF/cm^2]
cmdnmax = piecewise(engine.celltype == 1, cmdnmax_b * 1.2, cmdnmax_b)
    in [mM]
cmdnmax_b = 0.05 [mM]
    in [mM]
csqnmax = 1 [mM]
    in [mM]
dot(ki) = -(Ito.Ito + IKr.IKr + IKs.IKs + IK1.IK1 + IKb.IKb + stimulus.i_stim - 2 * INaK.INaK) * cm * cell_geometry.Acap / (physical_constants.F * cell_geometry.vmyo) + diff.JdiffK * cell_geometry.vss / cell_geometry.vmyo
    in [mM]
kmcmdn = 0.00238 [mM]
    in [mM]
kmcsqn = 0.8 [mM]
    in [mM]
kmtrpn = 0.0005 [mM]
    in [mM]
dot(kss) = -ICaL.ICaK * cm * cell_geometry.Acap / (physical_constants.F * cell_geometry.vss) - diff.JdiffK
    in [mM]
dot(nai) = -(INa.INa + INaL.INaL + 3 * INaCa_i.INaCa_i + 3 * INaK.INaK + INab.INab) * cell_geometry.Acap * cm / (physical_constants.F * cell_geometry.vmyo) + diff.JdiffNa * cell_geometry.vss / cell_geometry.vmyo
    in [mM]
dot(nass) = -(ICaL.ICaNa + 3 * INaCa_i.INaCa_ss) * cm * cell_geometry.Acap / (physical_constants.F * cell_geometry.vss) - diff.JdiffNa
    in [mM]
trpnmax = 0.07 [mM]
    in [mM]



[membrane]
#Istim = piecewise(engine.time >= i_Stim_Start and engine.time <= i_Stim_End and engine.time - i_Stim_Start - floor((engine.time - i_Stim_Start) / i_Stim_Period) * i_Stim_Period <= i_Stim_PulseDuration, i_Stim_Amplitude, 0 [A/F])
#    in [A/F]
#i_Stim_Amplitude = -53 [A/F]
#    in [A/F]
#i_Stim_End = 999000 [ms]
#    in [ms]
#i_Stim_Period = 1000 [ms]
#    in [ms]
#i_Stim_PulseDuration = 1 [ms]
#    in [ms]
#i_Stim_Start = 0 [ms]
#    in [ms]
pstim = 3
    in [1]
i_ion = INa.INa + INaL.INaL + Ito.Ito + ICaL.ICaL + ICaL.ICaNa + ICaL.ICaK + IKr.IKr + IKs.IKs + IK1.IK1 + INaCa_i.INaCa_i + INaCa_i.INaCa_ss + INaK.INaK + INab.INab + IKb.IKb + IpCa.IpCa + ICab.ICab
dot(v) = -(INa.INa + INaL.INaL + Ito.Ito + ICaL.ICaL + ICaL.ICaNa + ICaL.ICaK + IKr.IKr + IKs.IKs + IK1.IK1 + INaCa_i.INaCa_i + INaCa_i.INaCa_ss + INaK.INaK + INab.INab + IKb.IKb + IpCa.IpCa + ICab.ICab + stimulus.i_stim)
    in [mV]
vffrt = v * physical_constants.F * physical_constants.F / (physical_constants.R * physical_constants.T)
    in [C/mol]
vfrt = v * physical_constants.F / (physical_constants.R * physical_constants.T)
    in [1]

[physical_constants]
F = 96485 [C/mol]
    in [C/mol]
R = 8314 [mJ/mol/K]
    in [mJ/mol/K]
T = 310 [K]
    in [K]
zca = 2
    in [1]
zk = 1
    in [1]
zna = 1
    in [1]

[reversal_potentials]
EK = physical_constants.R * physical_constants.T / physical_constants.F * log(extracellular.ko / intracellular_ions.ki)
    in [mV]
EKs = physical_constants.R * physical_constants.T / physical_constants.F * log((extracellular.ko + PKNa * extracellular.nao) / (intracellular_ions.ki + PKNa * intracellular_ions.nai))
    in [mV]
EKshift = 8 [mV]
    in [mV]
ENa = physical_constants.R * physical_constants.T / physical_constants.F * log(extracellular.nao / intracellular_ions.nai)
    in [mV]
PKNa = 0.01833
    in [1]

[ryr]
Jrel = (1 - fJrelp) * Jrelnp + fJrelp * Jrelp
    in [mM/ms]
Jrelnp = piecewise(engine.celltype == 2, g_irel_max_M * RyRSRCass * RyRo * RyRc * (intracellular_ions.casr - intracellular_ions.cass), g_irel_max * RyRSRCass * RyRo * RyRc * (intracellular_ions.casr - intracellular_ions.cass))
    in [mM/ms]
Jrelp = piecewise(engine.celltype == 2, g_irel_max_p * 1.7 * RyRSRCass * RyRo * RyRcp * (intracellular_ions.casr - intracellular_ions.cass), g_irel_max_p * RyRSRCass * RyRo * RyRcp * (intracellular_ions.casr - intracellular_ions.cass))
    in [mM/ms]
RyRSRCass = 1 - 1 / (1 + exp((intracellular_ions.casr - 0.3 [mM]) / 0.1 [mM]))
    in [1]
dot(RyRa) = (RyRainfss - RyRa) / RyRtauadapt
    in [uM]
RyRa1 = 0.05 [uM]
    in [uM]
RyRa2 = 0.03 [uM]
    in [uM]
RyRainfss = RyRa1 - RyRa2 / (1 + exp((1000 * intracellular_ions.cass - 0.043 [uM]) / 0.0082 [uM]))
    in [uM]
dot(RyRc) = (RyRcinfss - RyRc) / RyRtauinact
    in [1]
RyRchalf = 0.1 [uM] - (RyRa1 - RyRa2 / 2)
    in [uM]
RyRcinfss = 1 / (1 + exp((1000 * intracellular_ions.cass - (RyRa + RyRchalf)) / 0.001 [uM]))
    in [1]
dot(RyRcp) = (RyRcinfss - RyRcp) / RyRtauinactp
    in [1]
dot(RyRo) = (RyRoinfss - RyRo) / RyRtauact
    in [1]
RyRohalf = 0.12 [uM] - (RyRa1 - RyRa2 / 2)
    in [uM]
RyRoinfss = 1 - 1 / (1 + exp((1000 * intracellular_ions.cass - (RyRa + RyRohalf)) / 0.003 [uM]))
    in [1]
RyRtauact = 1.875 [ms] / 1.875
    in [ms]
RyRtauadapt = 1000 [ms]
    in [ms]
RyRtauinact = 2 * 87.5 [ms] / 10
    in [ms]
RyRtauinactp = RyRtauinact * 1.25
    in [ms]
fJrelp = 1 / (1 + CaMK.KmCaMK / CaMK.CaMKa)
    in [1]
g_irel_max = 0.02 [mol/m^3/s]
    in [mol/m^3/s]
g_irel_max_M = g_irel_max * 1.7
    in [S/F]
g_irel_max_p = g_irel_max * 1.25
    in [S/F]

[trans_flux]
Jtr = 0 [mM/ms]
    in [mM/ms]

[[protocol]]
#Level  Start    Length   Period   Multiplier
#4.0      10       1        1000      0
